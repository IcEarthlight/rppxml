name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['cp310', 'cp311', 'cp312', 'cp313']

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel build

    - name: Install MSVC (Windows)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Build wheel
      run: |
        mkdir -p build
        cd build
        cmake -DBUILD_TEST_PARSER=OFF ..
        cmake --build . --config Release
        cd ..
        python -m build --wheel --no-isolation

    - name: Store wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build

    - name: Build sdist
      run: python -m build --sdist

    - name: Store sdist
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: dist

    - name: Prepare distribution files
      run: |
        mkdir -p dist_final
        find dist -type f -name "*.whl" -o -name "*.tar.gz" -exec cp {} dist_final/ \;

    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages-dir: dist_final/

  create_release:
    name: Create GitHub Release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@v3
      with:
        path: dist

    - name: Prepare release files
      run: |
        mkdir -p release_files
        find dist -type f -name "*.whl" -o -name "*.tar.gz" -exec cp {} release_files/ \;

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release_files/*
        draft: false
        prerelease: false
        generate_release_notes: true 
