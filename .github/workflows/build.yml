name: build

# trigger on push to master and release events
on:
  push:
    branches: [ master ]
  release:
    types: [ created ]

jobs:
  build_wheels:
    name: build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    # build matrix for different platforms
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
      # checkout the repository
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # setup python environment
      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # install build dependencies
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel setuptools

      # build wheels
      - name: build wheels
        run: |
          python setup.py bdist_wheel

      # store the built wheels as artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/*.whl

  # publish to pypi when creating a release
  publish:
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # only run on release
    if: github.event_name == 'release'
    
    steps:
      # download all the wheels
      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      # publish to pypi
      - name: publish to pypi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip install twine
          twine upload dist/*/*.whl

      # upload to github release
      - name: upload to github release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 